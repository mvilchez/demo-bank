swagger: "2.0"
info:
  description: "This is a sample server Bank server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Marino Bank"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "marino.vilchez@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "demobank.marino.org"
basePath: "/v1"
tags:
- name: "account"
  description: "Everything about your Accounts"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
- name: "user"
  description: "Operations about user"
  externalDocs:
    description: "Find out more about our store"
    url: "http://swagger.io"
schemes:
- "https"
- "http"
paths:
  /account:
    post:
      tags:
      - "account"
      summary: "Add a new account to the bank"
      description: ""
      operationId: "addAccount"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Account object that needs to be added to the bank"
        required: true
        schema:
          $ref: "#/definitions/AccountCreation"
      responses:
        "405":
          description: "Invalid input"
      security:
      - bank_auth:
        - "write:accounts"
        - "read:accounts"
  /account/findByUser:
    get:
      tags:
      - "account"
      summary: "Finds Accounts by user"
      description: "One user id has to be provided"
      operationId: "findByUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "userId"
        in: "query"
        description: "user id value that need to be considered for filter"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Account"
        "400":
          description: "Invalid user id value"
      security:
      - bank_auth:
        - "write:accounts"
        - "read:accounts"
  /account/deposit:
    post:
      tags:
      - "account"
      summary: "Deposit money into an account"
      description: ""
      operationId: "depositIntoAccount"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Deposit order that contains import and description of a deposit that will be added to an account"
        required: true
        schema:
          $ref: "#/definitions/DepositOrder"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "integer"
              format: "int32"
      security:
      - bank_auth:
        - "write:accounts"
        - "read:accounts"
  /account/view:
    get:
      tags:
      - "account"
      summary: "View account details"
      description: ""
      operationId: "viewAccountDetails"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "query"
        description: "account id value that need to be considered for filter"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/OverallAccountPosition"
        "400":
          description: "Invalid account id value"
      security:
      - bank_auth:
        - "read:accounts"
  /transfer:
    post:
      tags:
      - "account"
      summary: "Transfer from A account to B account"
      description: ""
      operationId: "transfer"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Transfer that contains import and description of a transfer that will be created"
        required: true
        schema:
          $ref: "#/definitions/Transfer"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "integer"
              format: "int32"
      security:
      - bank_auth:
        - "write:accounts"
        - "read:accounts"
  /user:
    post:
      tags:
      - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"
securityDefinitions:
  bank_auth:
    type: "oauth2"
    authorizationUrl: "http://demobank.marino.org/oauth/dialog"
    flow: "implicit"
    scopes:
      write:accounts: "modify accounts"
      read:accounts: "read accounts"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  AccountCreation:
    type: "object"
    properties:
      accountNumberIban:
        type: "string"
        description: "International Banking Account Number"
      accountNumberCCC:
        type: "string"
        description: "Spain Banking Account Number"
      holder:
        type: "string"
        description: "account holder"
  Account:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "Account id"
      accountNumberIban:
        type: "string"
        description: "International Banking Account Number"
      accountNumberCCC:
        type: "string"
        description: "Spain Banking Account Number"
      holder:
        $ref: "#/definitions/User"
    xml:
      name: "Account"
  DepositOrder:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      amount:
        type: "number"
        format: ""
      description:
        type: "string"
      destinationAccountId:
        type: "string"
      date:
        type: "string"
        format: "date-time"
    xml:
      name: "DepositOrder"
  AccountEntry:
    type: "object"
    properties:
      accountId: 
        type: "string"
      amount:
        type: "number"
      description:
        type: "string"
      date:
        type: "string"
        format: "date-time"
    xml:
      name: "AccountEntry"
  Transfer:
    type: "object"
    properties:
      amount:
        type: "number"
        format: ""
      destinationAccountId:
        type: "string"
      originAccountId:
        type: "string"
      date:
        type: "string"
        format: "date-time"
    xml:
      name: "Transfer"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
  Balance:
    type: "object"
    properties:
      balance:
        type: "number"
      accountId:
        type: "string"
      date:
        type: "string"
        format: "date-time"
    xml:
      name: "Balance"
  OverallAccountPosition:
    type: "object"
    properties:
      balance:
        $ref: "#/definitions/Balance"
      accountId:
        type: "string"
      date:
        type: "string"
        format: "date-time"
      movements:
        type: "array"
        description: "array of account movements"
        items:
          $ref: "#/definitions/AccountEntry"
    xml:
      name: "OverallAccountPosition"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"